{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUCHITH\\\\OneDrive\\\\Desktop\\\\Attica Admin panel\\\\admin_panel\\\\Frontend\\\\src\\\\components\\\\Messages.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'; // Or you can use fetch\n\nimport MessagesCard from './MessagesCard';\nimport CallLogTable from './CallLogTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [messagesData, setMessagesData] = useState([]);\n  const [callLogs, setCallLogs] = useState([]);\n\n  // Fetch messages and call logs when the component mounts\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get('http://localhost:3005/messages');\n        setMessagesData(response.data); // Store the messages in state\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    const fetchCallLogs = async () => {\n      try {\n        const response = await axios.get('http://localhost:3005/call-log');\n        setCallLogs(response.data); // Store the call logs in state\n      } catch (error) {\n        console.error('Error fetching call logs:', error);\n      }\n    };\n    fetchMessages();\n    fetchCallLogs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessagesCard, {\n      messages: messagesData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CallLogTable, {\n      callLogs: callLogs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"G+MkE3F3UvVYmA+7idxz++GANjo=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","MessagesCard","CallLogTable","jsxDEV","_jsxDEV","Dashboard","_s","messagesData","setMessagesData","callLogs","setCallLogs","fetchMessages","response","get","data","error","console","fetchCallLogs","children","className","fileName","_jsxFileName","lineNumber","columnNumber","messages","_c","$RefreshReg$"],"sources":["C:/Users/SUCHITH/OneDrive/Desktop/Attica Admin panel/admin_panel/Frontend/src/components/Messages.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';  // Or you can use fetch\r\n\r\nimport MessagesCard from './MessagesCard';\r\nimport CallLogTable from './CallLogTable';\r\n\r\nconst Dashboard = () => {\r\n  const [messagesData, setMessagesData] = useState([]);\r\n  const [callLogs, setCallLogs] = useState([]);\r\n\r\n  // Fetch messages and call logs when the component mounts\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3005/messages');\r\n        setMessagesData(response.data);  // Store the messages in state\r\n      } catch (error) {\r\n        console.error('Error fetching messages:', error);\r\n      }\r\n    };\r\n\r\n    const fetchCallLogs = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3005/call-log');\r\n        setCallLogs(response.data);  // Store the call logs in state\r\n      } catch (error) {\r\n        console.error('Error fetching call logs:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n    fetchCallLogs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-3xl font-bold mb-6\">Dashboard</h1>\r\n      {/* Pass the data to the components */}\r\n      <MessagesCard messages={messagesData} />\r\n      <CallLogTable callLogs={callLogs} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAE;;AAE5B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,gCAAgC,CAAC;QAClEL,eAAe,CAACI,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAE;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAED,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAML,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,gCAAgC,CAAC;QAClEH,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAE;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDJ,aAAa,CAAC,CAAC;IACfM,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAIe,SAAS,EAAC,yBAAyB;MAAAD,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEtDnB,OAAA,CAACH,YAAY;MAACuB,QAAQ,EAAEjB;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxCnB,OAAA,CAACF,YAAY;MAACO,QAAQ,EAAEA;IAAS;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACjB,EAAA,CApCID,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}