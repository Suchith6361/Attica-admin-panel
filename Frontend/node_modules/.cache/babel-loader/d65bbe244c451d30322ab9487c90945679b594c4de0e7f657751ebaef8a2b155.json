{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUCHITH\\\\Downloads\\\\Telegram Desktop\\\\admin_panel new\\\\admin_panel\\\\Frontend\\\\src\\\\components\\\\CallLog.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport CallLogTable from \"./CallLogTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CallLog = () => {\n  _s();\n  const [callLogs, setCallLogs] = useState([]);\n\n  // Fetching call logs data when the component loads\n  useEffect(() => {\n    fetch(\"/api/calllogs\") // Assuming this is your API endpoint to get call logs\n    .then(res => res.json()).then(data => setCallLogs(data)).catch(error => console.error(\"Error fetching call logs:\", error));\n  }, []);\n\n  // Function to delete all call logs\n  const deleteAllCallLogs = () => {\n    const confirmDelete = window.confirm(\"Do you really want to delete all call logs?\");\n    if (confirmDelete) {\n      // Call API to delete all logs\n      fetch(\"/api/calllogs\", {\n        method: \"DELETE\"\n      }).then(res => res.json()).then(() => {\n        setCallLogs([]); // Clear the state after deletion\n      }).catch(error => console.error(\"Error deleting all call logs:\", error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Call Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-red-500 text-white py-2 px-4 mb-4 rounded hover:bg-red-700\",\n      onClick: deleteAllCallLogs,\n      children: \"Delete All Call Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CallLogTable, {\n      callLogs: callLogs,\n      setCallLogs: setCallLogs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(CallLog, \"aDDOUqBcVQ35AnjCV/m2ZEd/X7M=\");\n_c = CallLog;\nexport default CallLog;\nvar _c;\n$RefreshReg$(_c, \"CallLog\");","map":{"version":3,"names":["React","useState","useEffect","CallLogTable","jsxDEV","_jsxDEV","CallLog","_s","callLogs","setCallLogs","fetch","then","res","json","data","catch","error","console","deleteAllCallLogs","confirmDelete","window","confirm","method","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SUCHITH/Downloads/Telegram Desktop/admin_panel new/admin_panel/Frontend/src/components/CallLog.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport CallLogTable from \"./CallLogTable\";\r\n\r\nconst CallLog = () => {\r\n  const [callLogs, setCallLogs] = useState([]);\r\n\r\n  // Fetching call logs data when the component loads\r\n  useEffect(() => {\r\n    fetch(\"/api/calllogs\") // Assuming this is your API endpoint to get call logs\r\n      .then((res) => res.json())\r\n      .then((data) => setCallLogs(data))\r\n      .catch((error) => console.error(\"Error fetching call logs:\", error));\r\n  }, []);\r\n\r\n  // Function to delete all call logs\r\n  const deleteAllCallLogs = () => {\r\n    const confirmDelete = window.confirm(\r\n      \"Do you really want to delete all call logs?\"\r\n    );\r\n    if (confirmDelete) {\r\n      // Call API to delete all logs\r\n      fetch(\"/api/calllogs\", {\r\n        method: \"DELETE\",\r\n      })\r\n        .then((res) => res.json())\r\n        .then(() => {\r\n          setCallLogs([]); // Clear the state after deletion\r\n        })\r\n        .catch((error) =>\r\n          console.error(\"Error deleting all call logs:\", error)\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-2xl font-bold mb-4\">Call Log</h2>\r\n\r\n      {/* Delete All Button with confirmation */}\r\n      <button\r\n        className=\"bg-red-500 text-white py-2 px-4 mb-4 rounded hover:bg-red-700\"\r\n        onClick={deleteAllCallLogs}\r\n      >\r\n        Delete All Call Logs\r\n      </button>\r\n\r\n      {/* Call Log Table with delete capability */}\r\n      <CallLogTable callLogs={callLogs} setCallLogs={setCallLogs} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CallLog;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,eAAe,CAAC,CAAC;IAAA,CACpBC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,WAAW,CAACK,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;EACxE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,aAAa,GAAGC,MAAM,CAACC,OAAO,CAClC,6CACF,CAAC;IACD,IAAIF,aAAa,EAAE;MACjB;MACAT,KAAK,CAAC,eAAe,EAAE;QACrBY,MAAM,EAAE;MACV,CAAC,CAAC,CACCX,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAC,MAAM;QACVF,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;MACnB,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IACXC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CACtD,CAAC;IACL;EACF,CAAC;EAED,oBACEX,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAImB,SAAS,EAAC,yBAAyB;MAAAD,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGrDvB,OAAA;MACEmB,SAAS,EAAC,+DAA+D;MACzEK,OAAO,EAAEX,iBAAkB;MAAAK,QAAA,EAC5B;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGTvB,OAAA,CAACF,YAAY;MAACK,QAAQ,EAAEA,QAAS;MAACC,WAAW,EAAEA;IAAY;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAACrB,EAAA,CA/CID,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAiDb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}