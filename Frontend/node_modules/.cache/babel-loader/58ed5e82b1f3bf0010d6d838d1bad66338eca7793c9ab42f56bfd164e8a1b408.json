{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUCHITH\\\\OneDrive\\\\Desktop\\\\Attica Admin panel\\\\admin_panel\\\\Frontend\\\\src\\\\components\\\\MessagesData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagesCard = () => {\n  _s();\n  const [messages, setMessages] = useState([]); // State to hold messages data\n  const [filteredMessages, setFilteredMessages] = useState([]); // State to hold filtered messages\n  const [searchQuery, setSearchQuery] = useState(''); // State for search input\n\n  // Fetch messages from backend API\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get('http://localhost:3005/getmessages'); // Replace with your API endpoint\n        setMessages(response.data); // Set messages\n        setFilteredMessages(response.data); // Initialize filtered messages with fetched data\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n  }, []);\n  app.get('/getmessages', async (req, res) => {\n    try {\n      const messages = await Message.find(); // Fetch all messages from the database\n      res.status(200).json(messages); // Return the messages as JSON\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n      res.status(500).json({\n        error: 'Error fetching messages'\n      }); // Handle error\n    }\n  });\n  // Search functionality\n  const handleSearch = e => {\n    const query = e.target.value;\n    setSearchQuery(query); // Update search query state\n\n    // Filter messages based on search query\n    const filtered = messages.filter(msg => msg.phoneNumber.toLowerCase().includes(query.toLowerCase()) || msg.messageContent.toLowerCase().includes(query.toLowerCase()));\n    setFilteredMessages(filtered); // Update filtered messages\n  };\n\n  // Handle delete message by ID\n  const handleDeleteMessage = async id => {\n    try {\n      await axios.delete(`http://localhost:3005/delete-message/${id}`); // API call to delete the message\n      setMessages(prevMessages => prevMessages.filter(msg => msg._id !== id)); // Update local state\n      setFilteredMessages(prevFiltered => prevFiltered.filter(msg => msg._id !== id)); // Update filtered messages\n    } catch (error) {\n      console.error('Error deleting message:', error);\n    }\n  };\n\n  // Handle delete all messages\n  const handleDeleteAllMessages = async () => {\n    if (window.confirm('Do you really want to delete all messages?')) {\n      // Confirmation dialog\n      try {\n        await axios.delete('http://localhost:3005/delete-all-messages'); // API call to delete all messages\n        setMessages([]); // Clear local state\n        setFilteredMessages([]); // Clear filtered messages\n      } catch (error) {\n        console.error('Error deleting all messages:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search messages...\",\n      value: searchQuery,\n      onChange: handleSearch,\n      className: \"mb-4 p-2 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteAllMessages,\n      className: \"mb-4 bg-red-500 text-white p-2 rounded\",\n      children: \"Delete All Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n      children: filteredMessages.length > 0 ? filteredMessages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow-md flex flex-col justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 font-semibold\",\n            children: [\"From: \", msg.phoneNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-800 mt-2\",\n            children: msg.messageContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Received: \", new Date(msg.timestamp).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Time: \", new Date(msg.timestamp).toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteMessage(msg._id),\n          className: \"mt-2 bg-red-500 text-white p-1 rounded\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)]\n      }, msg._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No messages available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(MessagesCard, \"EbxUFsmhJltkj+8l2roMjaX/diY=\");\n_c = MessagesCard;\nexport default MessagesCard;\nvar _c;\n$RefreshReg$(_c, \"MessagesCard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","MessagesCard","_s","messages","setMessages","filteredMessages","setFilteredMessages","searchQuery","setSearchQuery","fetchMessages","response","get","data","error","console","app","req","res","Message","find","status","json","handleSearch","e","query","target","value","filtered","filter","msg","phoneNumber","toLowerCase","includes","messageContent","handleDeleteMessage","id","delete","prevMessages","_id","prevFiltered","handleDeleteAllMessages","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","length","map","Date","timestamp","toLocaleDateString","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/SUCHITH/OneDrive/Desktop/Attica Admin panel/admin_panel/Frontend/src/components/MessagesData.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MessagesCard = () => {\r\n  const [messages, setMessages] = useState([]); // State to hold messages data\r\n  const [filteredMessages, setFilteredMessages] = useState([]); // State to hold filtered messages\r\n  const [searchQuery, setSearchQuery] = useState(''); // State for search input\r\n\r\n  // Fetch messages from backend API\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3005/getmessages'); // Replace with your API endpoint\r\n        setMessages(response.data); // Set messages\r\n        setFilteredMessages(response.data); // Initialize filtered messages with fetched data\r\n      } catch (error) {\r\n        console.error('Error fetching messages:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, []);\r\n\r\n  app.get('/getmessages', async (req, res) => {\r\n    try {\r\n      const messages = await Message.find(); // Fetch all messages from the database\r\n      res.status(200).json(messages); // Return the messages as JSON\r\n    } catch (error) {\r\n      console.error('Error fetching messages:', error);\r\n      res.status(500).json({ error: 'Error fetching messages' }); // Handle error\r\n    }\r\n  });\r\n  // Search functionality\r\n  const handleSearch = (e) => {\r\n    const query = e.target.value;\r\n    setSearchQuery(query); // Update search query state\r\n\r\n    // Filter messages based on search query\r\n    const filtered = messages.filter(msg => \r\n      msg.phoneNumber.toLowerCase().includes(query.toLowerCase()) ||\r\n      msg.messageContent.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n\r\n    setFilteredMessages(filtered); // Update filtered messages\r\n  };\r\n\r\n  // Handle delete message by ID\r\n  const handleDeleteMessage = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:3005/delete-message/${id}`); // API call to delete the message\r\n      setMessages(prevMessages => prevMessages.filter(msg => msg._id !== id)); // Update local state\r\n      setFilteredMessages(prevFiltered => prevFiltered.filter(msg => msg._id !== id)); // Update filtered messages\r\n    } catch (error) {\r\n      console.error('Error deleting message:', error);\r\n    }\r\n  };\r\n\r\n  // Handle delete all messages\r\n  const handleDeleteAllMessages = async () => {\r\n    if (window.confirm('Do you really want to delete all messages?')) { // Confirmation dialog\r\n      try {\r\n        await axios.delete('http://localhost:3005/delete-all-messages'); // API call to delete all messages\r\n        setMessages([]); // Clear local state\r\n        setFilteredMessages([]); // Clear filtered messages\r\n      } catch (error) {\r\n        console.error('Error deleting all messages:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Messages</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search messages...\"\r\n        value={searchQuery}\r\n        onChange={handleSearch}\r\n        className=\"mb-4 p-2 border rounded\"\r\n      />\r\n      <button onClick={handleDeleteAllMessages} className=\"mb-4 bg-red-500 text-white p-2 rounded\">\r\n        Delete All Messages\r\n      </button>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n        {filteredMessages.length > 0 ? (\r\n          filteredMessages.map((msg) => (\r\n            <div key={msg._id} className=\"bg-white p-4 rounded-lg shadow-md flex flex-col justify-between\">\r\n              <div className=\"mb-4\">\r\n                <p className=\"text-gray-600 font-semibold\">From: {msg.phoneNumber}</p>\r\n                <p className=\"text-gray-800 mt-2\">{msg.messageContent}</p>\r\n              </div>\r\n              <div className=\"text-gray-500 text-sm\">\r\n                <p>Received: {new Date(msg.timestamp).toLocaleDateString()}</p>\r\n                <p>Time: {new Date(msg.timestamp).toLocaleTimeString()}</p>\r\n              </div>\r\n              <button onClick={() => handleDeleteMessage(msg._id)} className=\"mt-2 bg-red-500 text-white p-1 rounded\">\r\n                Delete\r\n              </button>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No messages available</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}