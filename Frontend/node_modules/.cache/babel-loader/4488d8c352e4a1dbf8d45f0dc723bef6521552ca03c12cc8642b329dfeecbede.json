{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUCHITH\\\\OneDrive\\\\Desktop\\\\admin_panel new\\\\admin_panel\\\\Frontend\\\\src\\\\components\\\\AttendanceTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttendanceTable = () => {\n  _s();\n  const [employee, setEmployee] = useState(null);\n  const [attendance, setAttendance] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [employeeId, setEmployeeId] = useState(\"\"); // Employee ID state\n  const [date, setDate] = useState(new Date());\n  const navigate = useNavigate(); // For navigation if needed\n\n  const BASE_URL = \"http://localhost:3005\"; // Replace with your actual base URL\n\n  // Function to fetch employee attendance\n  const fetchEmployeeAttendance = async id => {\n    setLoading(true);\n    setError(null); // Reset error state\n    try {\n      const response = await axios.get(`${BASE_URL}/employees/${id}/attendance-list`);\n      setEmployee(response.data);\n      setAttendance(response.data.attendance || []); // Updated to match response structure\n    } catch (err) {\n      setError(\"Error fetching employee data. Please try again later.\");\n      console.error(\"Error fetching employee data:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle form submission\n  const handleSearch = e => {\n    e.preventDefault();\n    if (employeeId.trim()) {\n      fetchEmployeeAttendance(employeeId); // Fetch attendance when search is submitted\n    }\n  };\n\n  // Generate days for the current selected month\n  const generateMonthDays = (year, month) => {\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const days = [];\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push(new Date(year, month, day));\n    }\n    return days;\n  };\n  const getStatus = attendanceStatus => {\n    if (attendanceStatus.isPresent) return \"Present\";\n    if (attendanceStatus.isHalfDay) return \"Half Day\";\n    if (attendanceStatus.isLeave) return \"Leave\";\n    return \"Absent\"; // Default case\n  };\n\n  // Map attendance data to each day of the month\n  const fullMonthAttendance = generateMonthDays(date.getFullYear(), date.getMonth()).map(day => {\n    const record = attendance.find(att => {\n      const attendanceDate = att.time ? new Date(att.time).toDateString() : null; // Use the time directly from the record\n      return attendanceDate === day.toDateString();\n    });\n\n    // Get the attendance status or indicate no records\n    const status = record ? getStatus(record.AttendanceStatus) : \"No records\";\n    return {\n      date: day,\n      status\n    };\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: employeeId,\n        onChange: e => setEmployeeId(e.target.value),\n        placeholder: \"Enter Employee ID\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: employee ? `${employee.name}'s Attendance` : 'Employee Attendance'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: fullMonthAttendance.map((day, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: day.date.toDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: day.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendanceTable, \"naOs4Olyp08vDDsnI1ROCiUmXks=\", false, function () {\n  return [useNavigate];\n});\n_c = AttendanceTable;\nexport default AttendanceTable;\nvar _c;\n$RefreshReg$(_c, \"AttendanceTable\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","useNavigate","jsxDEV","_jsxDEV","AttendanceTable","_s","employee","setEmployee","attendance","setAttendance","loading","setLoading","error","setError","employeeId","setEmployeeId","date","setDate","Date","navigate","BASE_URL","fetchEmployeeAttendance","id","response","get","data","err","console","handleSearch","e","preventDefault","trim","generateMonthDays","year","month","daysInMonth","getDate","days","day","push","getStatus","attendanceStatus","isPresent","isHalfDay","isLeave","fullMonthAttendance","getFullYear","getMonth","map","record","find","att","attendanceDate","time","toDateString","status","AttendanceStatus","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","name","index","_c","$RefreshReg$"],"sources":["C:/Users/SUCHITH/OneDrive/Desktop/admin_panel new/admin_panel/Frontend/src/components/AttendanceTable.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst AttendanceTable = () => {\r\n  const [employee, setEmployee] = useState(null);\r\n  const [attendance, setAttendance] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [employeeId, setEmployeeId] = useState(\"\"); // Employee ID state\r\n  const [date, setDate] = useState(new Date());\r\n  const navigate = useNavigate(); // For navigation if needed\r\n\r\n  const BASE_URL = \"http://localhost:3005\"; // Replace with your actual base URL\r\n\r\n  // Function to fetch employee attendance\r\n  const fetchEmployeeAttendance = async (id) => {\r\n    setLoading(true);\r\n    setError(null); // Reset error state\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/employees/${id}/attendance-list`);\r\n      setEmployee(response.data);\r\n      setAttendance(response.data.attendance || []); // Updated to match response structure\r\n    } catch (err) {\r\n      setError(\"Error fetching employee data. Please try again later.\");\r\n      console.error(\"Error fetching employee data:\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    if (employeeId.trim()) {\r\n      fetchEmployeeAttendance(employeeId); // Fetch attendance when search is submitted\r\n    }\r\n  };\r\n\r\n  // Generate days for the current selected month\r\n  const generateMonthDays = (year, month) => {\r\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n    const days = [];\r\n    for (let day = 1; day <= daysInMonth; day++) {\r\n      days.push(new Date(year, month, day));\r\n    }\r\n    return days;\r\n  };\r\n\r\n  const getStatus = (attendanceStatus) => {\r\n    if (attendanceStatus.isPresent) return \"Present\";\r\n    if (attendanceStatus.isHalfDay) return \"Half Day\";\r\n    if (attendanceStatus.isLeave) return \"Leave\";\r\n    return \"Absent\"; // Default case\r\n  };\r\n\r\n  // Map attendance data to each day of the month\r\n  const fullMonthAttendance = generateMonthDays(date.getFullYear(), date.getMonth()).map((day) => {\r\n    const record = attendance.find(att => {\r\n      const attendanceDate = att.time ? new Date(att.time).toDateString() : null; // Use the time directly from the record\r\n      return attendanceDate === day.toDateString();\r\n    });\r\n\r\n    // Get the attendance status or indicate no records\r\n    const status = record ? getStatus(record.AttendanceStatus) : \"No records\";\r\n\r\n    return {\r\n      date: day,\r\n      status,\r\n    };\r\n  });\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSearch}>\r\n        <input\r\n          type=\"text\"\r\n          value={employeeId}\r\n          onChange={(e) => setEmployeeId(e.target.value)}\r\n          placeholder=\"Enter Employee ID\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n      <h2>{employee ? `${employee.name}'s Attendance` : 'Employee Attendance'}</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {fullMonthAttendance.map((day, index) => (\r\n            <tr key={index}>\r\n              <td>{day.date.toDateString()}</td>\r\n              <td>{day.status}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}