{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import axios from\"axios\";// Or you can use fetch\nimport{BASE_URL}from'./constants';import MessagesCard from\"./MessagesData\";import CallLogTable from\"./CallLogTable\";import{jsx as _jsx}from\"react/jsx-runtime\";const Dashboard=_ref=>{let{employeeId}=_ref;const[messagesData,setMessagesData]=useState([]);const[callLogs,setCallLogs]=useState([]);// Fetch messages and call logs when the component mounts\nuseEffect(()=>{const fetchMessages=async()=>{try{const response=await axios.get(`${BASE_URL}/messages`);setMessagesData(response.data);// Store the messages in state\n}catch(error){console.error(\"Error fetching messages:\",error);}};fetchMessages();},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-16 left-[270px] right-0\",children:/*#__PURE__*/_jsx(MessagesCard,{messages:messagesData})});};export default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","axios","BASE_URL","MessagesCard","CallLogTable","jsx","_jsx","Dashboard","_ref","employeeId","messagesData","setMessagesData","callLogs","setCallLogs","fetchMessages","response","get","data","error","console","className","children","messages"],"sources":["C:/Users/SUCHITH/OneDrive/Desktop/admin_panel new/admin_panel/Frontend/src/components/Messages.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\"; // Or you can use fetch\r\nimport { BASE_URL } from './constants'\r\n\r\nimport MessagesCard from \"./MessagesData\";\r\nimport CallLogTable from \"./CallLogTable\";\r\n\r\nconst Dashboard = ({ employeeId }) => {\r\n  const [messagesData, setMessagesData] = useState([]);\r\n  const [callLogs, setCallLogs] = useState([]);\r\n\r\n  // Fetch messages and call logs when the component mounts\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await axios.get(`${BASE_URL}/messages`);\r\n        setMessagesData(response.data); // Store the messages in state\r\n      } catch (error) {\r\n        console.error(\"Error fetching messages:\", error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"absolute top-16 left-[270px] right-0\">\r\n      {/* Pass the data to the components */}\r\n      <MessagesCard messages={messagesData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAE;AAC3B,OAASC,QAAQ,KAAQ,aAAa,CAEtC,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1C,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAoB,IAAnB,CAAEC,UAAW,CAAC,CAAAD,IAAA,CAC/B,KAAM,CAACE,YAAY,CAAEC,eAAe,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAE5C;AACAD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAe,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAd,KAAK,CAACe,GAAG,CAAC,GAAGd,QAAQ,WAAW,CAAC,CACxDS,eAAe,CAACI,QAAQ,CAACE,IAAI,CAAC,CAAE;AAClC,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAClD,CACF,CAAC,CAEDJ,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACER,IAAA,QAAKc,SAAS,CAAC,sCAAsC,CAAAC,QAAA,cAEnDf,IAAA,CAACH,YAAY,EAACmB,QAAQ,CAAEZ,YAAa,CAAE,CAAC,CACrC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}