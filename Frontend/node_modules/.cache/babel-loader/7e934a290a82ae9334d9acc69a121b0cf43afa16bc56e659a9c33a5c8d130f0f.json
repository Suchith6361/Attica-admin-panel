{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUCHITH\\\\OneDrive\\\\Desktop\\\\Attica Admin panel\\\\admin_panel\\\\Frontend\\\\src\\\\components\\\\CallLogTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CallLogTable = () => {\n  _s();\n  const [callLogs, setCallLogs] = useState([]); // Initialize with an empty array\n\n  useEffect(() => {\n    // Fetch call logs from the server\n    const fetchCallLogs = async () => {\n      try {\n        const response = await fetch('/getcall-log');\n        const data = await response.json();\n        setCallLogs(data); // Set the fetched data\n      } catch (error) {\n        console.error('Error fetching call logs:', error);\n      }\n    };\n    fetchCallLogs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Call Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Timestamp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: callLogs.length > 0 ? callLogs.map(log => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.employeeId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.callDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(log.timestamp).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this)]\n        }, log._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"3\",\n            children: \"No call logs available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(CallLogTable, \"aDDOUqBcVQ35AnjCV/m2ZEd/X7M=\");\n_c = CallLogTable;\nexport default CallLogTable;\nvar _c;\n$RefreshReg$(_c, \"CallLogTable\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CallLogTable","_s","callLogs","setCallLogs","fetchCallLogs","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","log","employeeId","callDetails","Date","timestamp","toLocaleString","_id","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/SUCHITH/OneDrive/Desktop/Attica Admin panel/admin_panel/Frontend/src/components/CallLogTable.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst CallLogTable = () => {\r\n  const [callLogs, setCallLogs] = useState([]);  // Initialize with an empty array\r\n\r\n  useEffect(() => {\r\n    // Fetch call logs from the server\r\n    const fetchCallLogs = async () => {\r\n      try {\r\n        const response = await fetch('/getcall-log');\r\n        const data = await response.json();\r\n        setCallLogs(data);  // Set the fetched data\r\n      } catch (error) {\r\n        console.error('Error fetching call logs:', error);\r\n      }\r\n    };\r\n\r\n    fetchCallLogs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Employee ID</th>\r\n            <th>Call Details</th>\r\n            <th>Timestamp</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {callLogs.length > 0 ? (\r\n            callLogs.map((log) => (\r\n              <tr key={log._id}>\r\n                <td>{log.employeeId}</td>\r\n                <td>{log.callDetails}</td>\r\n                <td>{new Date(log.timestamp).toLocaleString()}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"3\">No call logs available</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CallLogTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}