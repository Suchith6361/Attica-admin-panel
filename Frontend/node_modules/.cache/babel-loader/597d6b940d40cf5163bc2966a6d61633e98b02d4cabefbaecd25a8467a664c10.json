{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUCHITH\\\\OneDrive\\\\Desktop\\\\Attica Admin panel\\\\admin_panel\\\\Frontend\\\\src\\\\components\\\\MessagesData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagesCard = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [filteredMessages, setFilteredMessages] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Fetch messages from backend API\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get('http://localhost:3005/getmessages');\n        setMessages(response.data);\n        setFilteredMessages(response.data); // Set initially to all messages\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n  }, []);\n\n  // Handle search input\n  const handleSearch = async e => {\n    const query = e.target.value;\n    setSearchQuery(query);\n    if (query.trim() === '') {\n      setFilteredMessages(messages); // If search query is empty, show all messages\n    } else {\n      try {\n        const response = await axios.get(`http://localhost:3005/search-messages?query=${query}`);\n        setFilteredMessages(response.data);\n      } catch (error) {\n        console.error('Error searching messages:', error);\n      }\n    }\n  };\n\n  // Handle delete message\n  const handleDeleteMessage = async id => {\n    const confirmDelete = window.confirm('Do you really want to delete this message?');\n    if (confirmDelete) {\n      try {\n        await axios.delete(`http://localhost:3005/messages/${id}`);\n        setFilteredMessages(filteredMessages.filter(msg => msg._id !== id)); // Remove the deleted message from the UI\n      } catch (error) {\n        console.error('Error deleting message:', error);\n      }\n    }\n  };\n\n  // Handle delete all messages\n  const handleDeleteAllMessages = async () => {\n    const confirmDeleteAll = window.confirm('Do you really want to delete all messages?');\n    if (confirmDeleteAll) {\n      try {\n        await axios.delete('http://localhost:3005/messages');\n        setFilteredMessages([]); // Clear the UI after deletion\n      } catch (error) {\n        console.error('Error deleting all messages:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search messages...\",\n      value: searchQuery,\n      onChange: handleSearch,\n      className: \"transition rounded-sm mt-4 border border-blue-700 p-3 w-60 mb-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteAllMessages,\n      className: \"bg-red-500 text-white px-4 py-2 rounded-lg mb-4 ml-4\",\n      children: \"Delete All Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n      children: filteredMessages.length > 0 ? filteredMessages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        // Assuming the MongoDB ID is used\n        className: \"bg-white p-4 rounded-lg shadow-md flex flex-col justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 font-semibold\",\n            children: [\"From: \", msg.phoneNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-800 mt-2\",\n            children: msg.messageContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Received: \", new Date(msg.timestamp).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Time: \", new Date(msg.timestamp).toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteMessage(msg._id),\n          className: \"bg-red-500 text-white px-2 py-1 rounded-lg mt-4\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)]\n      }, msg._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No messages available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(MessagesCard, \"EbxUFsmhJltkj+8l2roMjaX/diY=\");\n_c = MessagesCard;\nexport default MessagesCard;\nvar _c;\n$RefreshReg$(_c, \"MessagesCard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","MessagesCard","_s","messages","setMessages","filteredMessages","setFilteredMessages","searchQuery","setSearchQuery","fetchMessages","response","get","data","error","console","handleSearch","e","query","target","value","trim","handleDeleteMessage","id","confirmDelete","window","confirm","delete","filter","msg","_id","handleDeleteAllMessages","confirmDeleteAll","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","length","map","phoneNumber","messageContent","Date","timestamp","toLocaleDateString","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/SUCHITH/OneDrive/Desktop/Attica Admin panel/admin_panel/Frontend/src/components/MessagesData.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MessagesCard = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [filteredMessages, setFilteredMessages] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  // Fetch messages from backend API\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3005/getmessages');\r\n        setMessages(response.data);\r\n        setFilteredMessages(response.data); // Set initially to all messages\r\n      } catch (error) {\r\n        console.error('Error fetching messages:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, []);\r\n\r\n  // Handle search input\r\n  const handleSearch = async (e) => {\r\n    const query = e.target.value;\r\n    setSearchQuery(query);\r\n\r\n    if (query.trim() === '') {\r\n      setFilteredMessages(messages); // If search query is empty, show all messages\r\n    } else {\r\n      try {\r\n        const response = await axios.get(`http://localhost:3005/search-messages?query=${query}`);\r\n        setFilteredMessages(response.data);\r\n      } catch (error) {\r\n        console.error('Error searching messages:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle delete message\r\n  const handleDeleteMessage = async (id) => {\r\n    const confirmDelete = window.confirm('Do you really want to delete this message?');\r\n    if (confirmDelete) {\r\n      try {\r\n        await axios.delete(`http://localhost:3005/messages/${id}`);\r\n        setFilteredMessages(filteredMessages.filter((msg) => msg._id !== id)); // Remove the deleted message from the UI\r\n      } catch (error) {\r\n        console.error('Error deleting message:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle delete all messages\r\n  const handleDeleteAllMessages = async () => {\r\n    const confirmDeleteAll = window.confirm('Do you really want to delete all messages?');\r\n    if (confirmDeleteAll) {\r\n      try {\r\n        await axios.delete('http://localhost:3005/messages');\r\n        setFilteredMessages([]); // Clear the UI after deletion\r\n      } catch (error) {\r\n        console.error('Error deleting all messages:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Messages</h2>\r\n\r\n      {/* Search bar */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search messages...\"\r\n        value={searchQuery}\r\n        onChange={handleSearch}\r\n        className=\"transition rounded-sm mt-4 border border-blue-700 p-3 w-60 mb-4\"\r\n      />\r\n\r\n      {/* Delete All Messages Button */}\r\n      <button\r\n        onClick={handleDeleteAllMessages}\r\n        className=\"bg-red-500 text-white px-4 py-2 rounded-lg mb-4 ml-4\"\r\n      >\r\n        Delete All Messages\r\n      </button>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n        {filteredMessages.length > 0 ? (\r\n          filteredMessages.map((msg) => (\r\n            <div\r\n              key={msg._id} // Assuming the MongoDB ID is used\r\n              className=\"bg-white p-4 rounded-lg shadow-md flex flex-col justify-between\"\r\n            >\r\n              <div className=\"mb-4\">\r\n                <p className=\"text-gray-600 font-semibold\">From: {msg.phoneNumber}</p>\r\n                <p className=\"text-gray-800 mt-2\">{msg.messageContent}</p> {/* Use correct message field */}\r\n              </div>\r\n              <div className=\"text-gray-500 text-sm\">\r\n                <p>Received: {new Date(msg.timestamp).toLocaleDateString()}</p>\r\n                <p>Time: {new Date(msg.timestamp).toLocaleTimeString()}</p>\r\n              </div>\r\n\r\n              {/* Delete Message Button */}\r\n              <button\r\n                onClick={() => handleDeleteMessage(msg._id)}\r\n                className=\"bg-red-500 text-white px-2 py-1 rounded-lg mt-4\"\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No messages available</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}