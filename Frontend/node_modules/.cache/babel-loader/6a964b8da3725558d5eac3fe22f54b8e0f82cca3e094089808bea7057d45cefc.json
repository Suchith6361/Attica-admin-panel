{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUCHITH\\\\OneDrive\\\\Desktop\\\\Attica Admin panel\\\\admin_panel\\\\Frontend\\\\src\\\\components\\\\MessagesData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagesCard = () => {\n  _s();\n  const [messages, setMessages] = useState([]); // State to hold messages data\n\n  // Fetch messages from backend API\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get('http://localhost:3005/getmessages'); // Replace with your API endpoint\n        setMessages(response.data); // Assuming the response contains an array of messages\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n      children: messages.length > 0 ? messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        // Assuming the MongoDB ID is used\n        className: \"bg-white p-4 rounded-lg shadow-md flex flex-col justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 font-semibold\",\n            children: [\"From: \", msg.phoneNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-800 mt-2\",\n            children: msg.messageContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Received: \", new Date(msg.timestamp).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Time: \", new Date(msg.timestamp).toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, msg._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No messages available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(MessagesCard, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = MessagesCard;\nexport default MessagesCard;\nvar _c;\n$RefreshReg$(_c, \"MessagesCard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","MessagesCard","_s","messages","setMessages","fetchMessages","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","msg","phoneNumber","messageContent","Date","timestamp","toLocaleDateString","toLocaleTimeString","_id","_c","$RefreshReg$"],"sources":["C:/Users/SUCHITH/OneDrive/Desktop/Attica Admin panel/admin_panel/Frontend/src/components/MessagesData.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MessagesCard = () => {\r\n  const [messages, setMessages] = useState([]); // State to hold messages data\r\n\r\n  // Fetch messages from backend API\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3005/getmessages'); // Replace with your API endpoint\r\n        setMessages(response.data); // Assuming the response contains an array of messages\r\n      } catch (error) {\r\n        console.error('Error fetching messages:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Messages</h2>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n        {messages.length > 0 ? (\r\n          messages.map((msg) => (\r\n            <div\r\n              key={msg._id}  // Assuming the MongoDB ID is used\r\n              className=\"bg-white p-4 rounded-lg shadow-md flex flex-col justify-between\"\r\n            >\r\n              <div className=\"mb-4\">\r\n                <p className=\"text-gray-600 font-semibold\">From: {msg.phoneNumber}</p>\r\n                <p className=\"text-gray-800 mt-2\">{msg.messageContent}</p> {/* Use correct message field */}\r\n              </div>\r\n              <div className=\"text-gray-500 text-sm\">\r\n                <p>Received: {new Date(msg.timestamp).toLocaleDateString()}</p>\r\n                <p>Time: {new Date(msg.timestamp).toLocaleTimeString()}</p>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No messages available</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}